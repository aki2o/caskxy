(require 'caskxy)
(require 'el-expectations)

(expectations
  (desc "do-cask-command not exist caskxy/cask-cli-path")
  (expect (mock (caskxy--show-message "Not found '%s'. Do you not yet install cask?" "~/cask-cli.el"))
    (stub caskxy--do-exec => nil)
    (setenv "EMACS" "emacs")
    (let ((caskxy/cask-cli-path "~/cask-cli.el"))
      (caskxy/do-cask-command "upgrade")))
  (desc "do-cask-command other than exec command")
  (expect (mock (caskxy--run-shell-command (format "'emacs' -Q --script %s -- upgrade" (expand-file-name "~/cask-cli.el")) nil))
    (stub caskxy--do-exec => nil)
    (stub file-exists-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/cask-cli-path "~/cask-cli.el"))
      (caskxy/do-cask-command "upgrade")))
  (desc "do-cask-command other than exec command result-as-string")
  (expect (mock (caskxy--run-shell-command (format "'emacs' -Q --script %s -- upgrade" (expand-file-name "~/cask-cli.el")) t))
    (stub caskxy--do-exec => nil)
    (stub file-exists-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/cask-cli-path "~/cask-cli.el"))
      (caskxy/do-cask-command "upgrade" t)))
  (desc "do-cask-command exec command")
  (expect (mock (caskxy--do-exec nil nil))
    (stub caskxy--run-shell-command => nil)
    (stub file-exists-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/cask-cli-path "~/cask-cli.el"))
      (caskxy/do-cask-command "exec")))
  (desc "do-cask-command exec command result-as-string")
  (expect (mock (caskxy--do-exec nil t))
    (stub caskxy--run-shell-command => nil)
    (stub file-exists-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/cask-cli-path "~/cask-cli.el"))
      (caskxy/do-cask-command "exec" t)))
  )

