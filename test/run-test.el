(require 'caskxy)
(require 'el-expectations)

(expectations
  (desc "run-test ert")
  (expect (mock (caskxy--do-exec (format "'emacs' -Q --batch -L %s -l %s -f ert-run-tests-batch-and-exit"
                                         (expand-file-name "~/fuga")
                                         (expand-file-name "~/hoge/cask-test.el"))))
    (stub y-or-n-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/tester-backend 'ert)
          (caskxy--cask-location (expand-file-name "~/fuga")))
      (caskxy/run-test (expand-file-name "~/hoge/cask-test.el"))))
  (desc "run-test ert-expectations")
  (expect (mock (caskxy--do-exec (format "'emacs' -Q --batch -L %s -l %s -f batch-expectations"
                                         (expand-file-name "~/fuga")
                                         (expand-file-name "~/hoge/cask-test.el"))))
    (stub y-or-n-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/tester-backend 'ert-expectations)
          (caskxy--cask-location (expand-file-name "~/fuga")))
      (caskxy/run-test (expand-file-name "~/hoge/cask-test.el"))))
  (desc "run-test el-expectations")
  (expect (mock (caskxy--do-exec (format "'emacs' -Q --batch -L %s -l %s -f batch-expectations %s ; cat %s"
                                         (expand-file-name "~/fuga")
                                         (expand-file-name "~/hoge/cask-test.el")
                                         (expand-file-name "/tmp/.el-expectations.19871231012345.result")
                                         (expand-file-name "/tmp/.el-expectations.19871231012345.result"))))
    (stub y-or-n-p => t)
    (stub format-time-string => "19871231012345")
    (setenv "EMACS" "emacs")
    (setenv "TMP" (expand-file-name "/tmp"))
    (let ((caskxy/tester-backend 'el-expectations)
          (caskxy--cask-location (expand-file-name "~/fuga")))
      (caskxy/run-test (expand-file-name "~/hoge/cask-test.el"))))
  (desc "run-test all")
  (expect (mock (caskxy--do-exec (format "'emacs' -Q --batch -L %s -l %s -l %s -f ert-run-tests-batch-and-exit"
                                         (expand-file-name "~/fuga")
                                         (expand-file-name "~/hoge/cask-test1.el")
                                         (expand-file-name "~/hoge/cask-test2.el"))))
    (stub y-or-n-p => t)
    (stub caskxy--seek-test-files => `(,(expand-file-name "~/hoge/cask-test1.el")
                                       ,(expand-file-name "~/hoge/cask-test2.el")))
    (setenv "EMACS" "emacs")
    (let ((caskxy/tester-backend 'ert)
          (caskxy--cask-location (expand-file-name "~/fuga")))
      (caskxy/run-test 'all)))
  )

