(require 'caskxy)
(require 'ert-expectations)

(expectations
  (desc "run-test ert")
  (expect (mock (caskxy--do-exec "'emacs' -Q --batch -L c\\:/fuga -l c\\:/hoge/cask-test.el -f ert-run-tests-batch-and-exit"))
    (stub y-or-n-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/tester-backend 'ert)
          (caskxy--cask-location "c:/fuga"))
      (caskxy/run-test "c:/hoge/cask-test.el")))
  (desc "run-test ert-expectations")
  (expect (mock (caskxy--do-exec "'emacs' -Q --batch -L c\\:/fuga -l c\\:/hoge/cask-test.el -f batch-expectations"))
    (stub y-or-n-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/tester-backend 'ert-expectations)
          (caskxy--cask-location "c:/fuga"))
      (caskxy/run-test "c:/hoge/cask-test.el")))
  (desc "run-test el-expectations")
  (expect (mock (caskxy--do-exec "'emacs' -Q --batch -L c\\:/fuga -l c\\:/hoge/cask-test.el -f batch-expectations"))
    (stub y-or-n-p => t)
    (setenv "EMACS" "emacs")
    (let ((caskxy/tester-backend 'el-expectations)
          (caskxy--cask-location "c:/fuga"))
      (caskxy/run-test "c:/hoge/cask-test.el")))
  (desc "run-test all")
  (expect (mock (caskxy--do-exec "'emacs' -Q --batch -L c\\:/fuga -l c\\:/hoge/cask-test1.el -l c\\:/hoge/cask-test2.el -f ert-run-tests-batch-and-exit"))
    (stub y-or-n-p => t)
    (stub caskxy--seek-test-files => '("c:/hoge/cask-test1.el"
                                       "c:/hoge/cask-test2.el"))
    (setenv "EMACS" "emacs")
    (let ((caskxy/tester-backend 'ert)
          (caskxy--cask-location "c:/fuga"))
      (caskxy/run-test 'all)))
  )

